#!/usr/bin/env python2
from StringIO import StringIO
import os, zipfile, pycurl
import requests

os.chdir(os.path.dirname(os.path.realpath(__file__)))
os.chdir('..')

# Generate fresh translation template
if not os.path.exists('lib/locale'):
    os.mkdir('lib/locale')
cmd = 'xgettext -s --no-wrap -f app.fil --output=lib/locale/messages.pot'
print 'Generate template'
os.system(cmd)

os.chdir('lib')

crowdin_identifier = 'uwallet'
crowdin_file_name = 'uwallet-client/messages.pot'
locale_file_name = 'locale/messages.pot'

if os.path.exists('../contrib/crowdin_api_key.txt'):
    crowdin_api_key = open('../contrib/crowdin_api_key.txt').read().strip()
    # Push to Crowdin
    print 'Push to Crowdin'
    url = ('https://api.crowdin.com/api/project/' + crowdin_identifier + '/update-file?key=' + crowdin_api_key)
    c = pycurl.Curl()
    c.setopt(c.URL, url)
    c.setopt(c.POST, 1)
    fields = [('files[' + crowdin_file_name + ']', (pycurl.FORM_FILE, locale_file_name))]
    c.setopt(c.HTTPPOST, fields)
    c.perform()
    # Build translations
    print 'Build translations'
    response = requests.request('GET', 'http://api.crowdin.com/api/project/' + crowdin_identifier + '/export?key=' + crowdin_api_key).content
    print response

# Download & unzip
print 'Download translations'
zfobj = zipfile.ZipFile(StringIO(requests.request('GET', 'http://crowdin.com/download/project/' + crowdin_identifier + '.zip').content))

print 'Unzip translations'
for name in zfobj.namelist():
    if not name.startswith('uwallet-client/locale'):
        continue
    if name.endswith('/'):
        if not os.path.exists(name[16:]):
            os.mkdir(name[16:])
    else:
        output = open(name[16:],'w')
        output.write(zfobj.read(name))
        output.close()

# Convert .po to .mo
print 'Installing'
for lang in os.listdir('locale'):
    if lang.startswith('messages'):
        continue
    # Check LC_MESSAGES folder
    mo_dir = 'locale/%s/LC_MESSAGES' % lang
    if not os.path.exists(mo_dir):
        os.mkdir(mo_dir)
    cmd = 'msgfmt --output-file="%s/uwallet.mo" "locale/%s/uwallet.po"' % (mo_dir,lang)
    print 'Installing',lang
    os.system(cmd)
